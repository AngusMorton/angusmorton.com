{"version":3,"sources":["webpack:///./src/styles/colors.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/website-config.ts","webpack:///./src/styles/shared.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header/SiteNavLogo.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/favicon.ico"],"names":["__webpack_require__","d","__webpack_exports__","colors","blue","green","purple","yellow","red","darkgrey","midgrey","lightgrey","whitegrey","pink","brown","StaticQueryContext","React","createContext","StaticQuery","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","config","title","description","coverImage","logo","lang","siteUrl","showSubscribe","outer","name","styles","inner","SiteMain","SiteTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","SiteDescription","PostFeed","PostFeedRaise","SocialLink","SiteHeader","css","darken","SiteHeaderContent","AuthorProfileImage","lighten","StyledWrapper","Wrapper","_ref","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","GlobalStyles","IndexLayout","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","rel","href","favicon","type","PostCardStyles","PostCardImageLink","PostCardImage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","AuthorList","AuthorListItem","AuthorNameTooltip","StaticAvatar","ReadingTime","PostCard","post","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","frontmatter","image","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","childImageSharp","fluid","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","alt","style","height","tags","excerpt","author","id","_","src","avatar","fixed","timeToRead","m","module","exports","require","default","SiteNavLogoStyles","SiteNavLogo","_public_static_d_296977140_json__WEBPACK_IMPORTED_MODULE_2__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","p"],"mappings":"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","file":"1-2fa4f9fdeb464fe7b881.js","sourcesContent":["export const colors = {\r\n  blue: '#3eb0ef',\r\n  green: '#a4d037',\r\n  purple: '#ad26b4',\r\n  yellow: '#fecd35',\r\n  red: '#f05230',\r\n  darkgrey: '#15171A',\r\n  midgrey: '#738a94',\r\n  lightgrey: '#c5d2d9',\r\n  whitegrey: '#e5eff5',\r\n  pink: '#fa3a57',\r\n  brown: '#a3821a',\r\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","export interface WebsiteConfig {\r\n  title: string;\r\n  description: string;\r\n  coverImage: string;\r\n  logo: string;\r\n  /**\r\n   * Specifying a valid BCP 47 language helps screen readers announce text properly.\r\n   * See: https://dequeuniversity.com/rules/axe/2.2/valid-lang\r\n   */\r\n  lang: string;\r\n  /**\r\n   * blog full path, no ending slash!\r\n   */\r\n  siteUrl: string;\r\n  facebook?: string;\r\n  twitter?: string;\r\n  /**\r\n   * hide or show all email subscribe boxes\r\n   */\r\n  showSubscribe: boolean;\r\n  /**\r\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\r\n   */\r\n  mailchimpAction?: string;\r\n  /**\r\n   * this is the hidden input field name\r\n   */\r\n  mailchimpName?: string;\r\n}\r\n\r\nconst config: WebsiteConfig = {\r\n  title: 'Angus Morton',\r\n  description: 'The professional publishing platform',\r\n  coverImage: 'img/blog-cover.jpg',\r\n  logo: 'img/ghost-logo.png',\r\n  lang: 'en',\r\n  siteUrl: 'https://gatsby-casper.netlify.com',\r\n  showSubscribe: false,\r\n};\r\n\r\nexport default config;\r\n","import { css } from '@emotion/core';\r\nimport styled from '@emotion/styled'\r\nimport { colors } from './colors';\r\nimport { darken, lighten } from 'polished';\r\n\r\nexport const outer = css`\r\n  position: relative;\r\n  padding: 0 4vw;\r\n`;\r\n\r\n// Centered content container blocks\r\nexport const inner = css`\r\n  margin: 0 auto;\r\n  max-width: 1040px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const SiteMain = css`\r\n  z-index: 100;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const SiteTitle = styled.h1`\r\n  z-index: 10;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 3.8rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const SiteDescription = styled.h2`\r\n  z-index: 10;\r\n  margin: 0;\r\n  padding: 5px 0;\r\n  font-size: 2.2rem;\r\n  font-weight: 300;\r\n  letter-spacing: 0.5px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const PostFeed = css`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -20px;\r\n  padding: 40px 0 0 0;\r\n`;\r\n\r\nexport const PostFeedRaise = css`\r\n  @media (min-width: 900px) {\r\n    margin-top: -70px;\r\n    padding-top: 0;\r\n  }\r\n`;\r\n\r\nexport const SocialLink = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0;\r\n  padding: 10px;\r\n  color: #fff;\r\n  opacity: 0.8;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  svg {\r\n    height: 1.8rem;\r\n    fill: #fff;\r\n  }\r\n`;\r\n\r\nexport const SiteHeader = css`\r\n  position: relative;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  /* background: color(var(--darkgrey) l(-5%)) no-repeat center center; */\r\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const SiteHeaderContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10vw 4vw;\r\n  min-height: 200px;\r\n  max-height: 450px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SiteHeaderStyles = css`\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: auto;\r\n  left: 0;\r\n  z-index: 10;\r\n  display: block;\r\n  height: 80px;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\r\n\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 10;\r\n    display: block;\r\n    background: rgba(0, 0, 0, 0.18);\r\n  }\r\n\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: auto;\r\n    left: 0;\r\n    z-index: 10;\r\n    display: block;\r\n    height: 80px;\r\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\r\n  }\r\n  @media (max-width: 700px) {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n`;\r\n\r\nexport const AuthorProfileImage = css`\r\n  display: block;\r\n  /* background: color(var(--lightgrey) l(+10%)); */\r\n  background: ${lighten('0.1', colors.lightgrey)};\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n  margin-right: 15px;\r\n  width: 60px;\r\n  height: 60px;\r\n`;\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`;\r\n\r\ninterface WrapperProps {\r\n  className?: string;\r\n}\r\n\r\nconst Wrapper: React.FunctionComponent<WrapperProps> = ({ children, className }) => (\r\n  <StyledWrapper className={className}>{children}</StyledWrapper>\r\n);\r\n\r\nexport default Wrapper;\r\n","import { Global, css } from '@emotion/core';\r\nimport { darken, lighten } from 'polished';\r\nimport * as React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport { colors } from '../styles/colors';\r\n// @ts-ignore\r\nimport favicon from '../../src/favicon.ico';\r\n\r\ninterface IndexProps {\r\n  className?: string;\r\n}\r\n\r\nconst GlobalStyles = css`\r\n  html,\r\n  body,\r\n  div,\r\n  span,\r\n  applet,\r\n  object,\r\n  iframe,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6,\r\n  p,\r\n  blockquote,\r\n  pre,\r\n  a,\r\n  abbr,\r\n  acronym,\r\n  address,\r\n  big,\r\n  cite,\r\n  code,\r\n  del,\r\n  dfn,\r\n  em,\r\n  img,\r\n  ins,\r\n  kbd,\r\n  q,\r\n  s,\r\n  samp,\r\n  small,\r\n  strike,\r\n  strong,\r\n  sub,\r\n  sup,\r\n  tt,\r\n  var,\r\n  dl,\r\n  dt,\r\n  dd,\r\n  ol,\r\n  ul,\r\n  li,\r\n  fieldset,\r\n  form,\r\n  label,\r\n  legend,\r\n  table,\r\n  caption,\r\n  tbody,\r\n  tfoot,\r\n  thead,\r\n  tr,\r\n  th,\r\n  td,\r\n  article,\r\n  aside,\r\n  canvas,\r\n  details,\r\n  embed,\r\n  figure,\r\n  figcaption,\r\n  footer,\r\n  header,\r\n  hgroup,\r\n  menu,\r\n  nav,\r\n  output,\r\n  ruby,\r\n  section,\r\n  summary,\r\n  time,\r\n  mark,\r\n  audio,\r\n  video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font: inherit;\r\n    font-size: 100%;\r\n    vertical-align: baseline;\r\n  }\r\n  body {\r\n    line-height: 1;\r\n  }\r\n  ol,\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  blockquote,\r\n  q {\r\n    quotes: none;\r\n  }\r\n  blockquote:before,\r\n  blockquote:after,\r\n  q:before,\r\n  q:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    border-collapse: collapse;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  html {\r\n    box-sizing: border-box;\r\n    font-family: sans-serif;\r\n\r\n    -ms-text-size-adjust: 100%;\r\n    -webkit-text-size-adjust: 100%;\r\n  }\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  a {\r\n    background-color: transparent;\r\n  }\r\n  a:active,\r\n  a:hover {\r\n    outline: 0;\r\n  }\r\n  b,\r\n  strong {\r\n    font-weight: bold;\r\n  }\r\n  i,\r\n  em,\r\n  dfn {\r\n    font-style: italic;\r\n  }\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-size: 2em;\r\n  }\r\n  small {\r\n    font-size: 80%;\r\n  }\r\n  sub,\r\n  sup {\r\n    position: relative;\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    vertical-align: baseline;\r\n  }\r\n  sup {\r\n    top: -0.5em;\r\n  }\r\n  sub {\r\n    bottom: -0.25em;\r\n  }\r\n  img {\r\n    border: 0;\r\n  }\r\n  svg:not(:root) {\r\n    overflow: hidden;\r\n  }\r\n  mark {\r\n    background-color: #fdffb6;\r\n  }\r\n  code,\r\n  kbd,\r\n  pre,\r\n  samp {\r\n    font-family: monospace, monospace;\r\n    font-size: 1em;\r\n  }\r\n  button,\r\n  input,\r\n  optgroup,\r\n  select,\r\n  textarea {\r\n    margin: 0;\r\n    color: inherit;\r\n    font: inherit;\r\n  }\r\n  button {\r\n    overflow: visible;\r\n    border: none;\r\n  }\r\n  button,\r\n  select {\r\n    text-transform: none;\r\n  }\r\n  button,\r\n  html input[type='button'],\r\n  input[type='reset'],\r\n  input[type='submit'] {\r\n    cursor: pointer;\r\n\r\n    -webkit-appearance: button;\r\n  }\r\n  button[disabled],\r\n  html input[disabled] {\r\n    cursor: default;\r\n  }\r\n  button::-moz-focus-inner,\r\n  input::-moz-focus-inner {\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n  input {\r\n    line-height: normal;\r\n  }\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n  input[type='checkbox'],\r\n  input[type='radio'] {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n  }\r\n  input[type='number']::-webkit-inner-spin-button,\r\n  input[type='number']::-webkit-outer-spin-button {\r\n    height: auto;\r\n  }\r\n  input[type='search'] {\r\n    box-sizing: content-box;\r\n\r\n    -webkit-appearance: textfield;\r\n  }\r\n  input[type='search']::-webkit-search-cancel-button,\r\n  input[type='search']::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  legend {\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n  table {\r\n    border-spacing: 0;\r\n    border-collapse: collapse;\r\n  }\r\n  td,\r\n  th {\r\n    padding: 0;\r\n  }\r\n\r\n  html {\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    font-size: 62.5%;\r\n\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  }\r\n  body {\r\n    overflow-x: hidden;\r\n    color: ${darken('0.25', colors.midgrey)};\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\r\n      'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 1.5rem;\r\n    line-height: 1.6em;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    letter-spacing: 0;\r\n    text-rendering: optimizeLegibility;\r\n    background: #fff;\r\n\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -moz-font-feature-settings: 'liga' on;\r\n  }\r\n\r\n  ::selection {\r\n    text-shadow: none;\r\n    background: ${lighten('0.3', colors.blue)};\r\n  }\r\n\r\n  hr {\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    margin: 2.5em 0 3.5em;\r\n    padding: 0;\r\n    height: 1px;\r\n    border: 0;\r\n    border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\r\n  }\r\n\r\n  audio,\r\n  canvas,\r\n  iframe,\r\n  img,\r\n  svg,\r\n  video {\r\n    vertical-align: middle;\r\n  }\r\n\r\n  fieldset {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n\r\n  textarea {\r\n    resize: vertical;\r\n  }\r\n\r\n  p,\r\n  ul,\r\n  ol,\r\n  dl,\r\n  blockquote {\r\n    margin: 0 0 1.5em 0;\r\n  }\r\n\r\n  ol,\r\n  ul {\r\n    padding-left: 1.3em;\r\n    padding-right: 1.5em;\r\n  }\r\n\r\n  ol ol,\r\n  ul ul,\r\n  ul ol,\r\n  ol ul {\r\n    margin: 0.5em 0 1em;\r\n  }\r\n\r\n  ul {\r\n    list-style: disc;\r\n  }\r\n\r\n  ol {\r\n    list-style: decimal;\r\n  }\r\n\r\n  ul,\r\n  ol {\r\n    max-width: 100%;\r\n  }\r\n\r\n  li {\r\n    margin: 0.5em 0;\r\n    padding-left: 0.3em;\r\n    line-height: 1.6em;\r\n  }\r\n\r\n  dt {\r\n    float: left;\r\n    margin: 0 20px 0 0;\r\n    width: 120px;\r\n    color: ${colors.darkgrey};\r\n    font-weight: 500;\r\n    text-align: right;\r\n  }\r\n\r\n  dd {\r\n    margin: 0 0 5px 0;\r\n    text-align: left;\r\n  }\r\n\r\n  blockquote {\r\n    margin: 1.5em 0;\r\n    padding: 0 1.6em 0 1.6em;\r\n    border-left: ${colors.whitegrey} 0.5em solid;\r\n  }\r\n\r\n  blockquote p {\r\n    margin: 0.8em 0;\r\n    font-size: 1.2em;\r\n    font-weight: 300;\r\n  }\r\n\r\n  blockquote small {\r\n    display: inline-block;\r\n    margin: 0.8em 0 0.8em 1.5em;\r\n    font-size: 0.9em;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  blockquote small:before {\r\n    content: '\\\\2014 \\\\00A0';\r\n  }\r\n\r\n  blockquote cite {\r\n    font-weight: bold;\r\n  }\r\n  blockquote cite a {\r\n    font-weight: normal;\r\n  }\r\n\r\n  a {\r\n    color: ${darken('0.05', colors.blue)};\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin-top: 0;\r\n    line-height: 1.15;\r\n    font-weight: 700;\r\n    text-rendering: optimizeLegibility;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0 0 0.5em 0;\r\n    font-size: 5rem;\r\n    font-weight: 700;\r\n  }\r\n  @media (max-width: 500px) {\r\n    h1 {\r\n      font-size: 2.2rem;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    margin: 1.5em 0 0.5em 0;\r\n    font-size: 2rem;\r\n  }\r\n  @media (max-width: 500px) {\r\n    h2 {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    margin: 1.5em 0 0.5em 0;\r\n    font-size: 1.8rem;\r\n    font-weight: 500;\r\n  }\r\n  @media (max-width: 500px) {\r\n    h3 {\r\n      font-size: 1.7rem;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    margin: 1.5em 0 0.5em 0;\r\n    font-size: 1.6rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  h5 {\r\n    margin: 1.5em 0 0.5em 0;\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  h6 {\r\n    margin: 1.5em 0 0.5em 0;\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  body {\r\n    background: #f4f8fb;\r\n  }\r\n`;\r\n\r\nconst IndexLayout: React.FunctionComponent<IndexProps> = props => {\r\n  return (\r\n    <div className={props.className}>\r\n      <Helmet>\r\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\r\n      </Helmet>\r\n      <Global styles={GlobalStyles} />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexLayout;\r\n","import { Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport * as _ from 'lodash';\r\nimport { lighten } from 'polished';\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n\r\nimport { colors } from '../styles/colors';\r\nimport { PageContext } from '../templates/post';\r\n\r\nconst PostCardStyles = css`\r\n  flex: 1 1 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  margin: 0 20px 40px;\r\n  min-height: 300px;\r\n  background: #fff center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\r\n  transition: all 0.5s ease;\r\n\r\n  :hover {\r\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\r\n    transition: all 0.4s ease;\r\n    transform: translate3D(0, -1px, 0) scale(1.02);\r\n  }\r\n`;\r\n\r\nconst PostCardImageLink = css`\r\n  position: relative;\r\n  display: block;\r\n  overflow: hidden;\r\n  border-radius: 5px 5px 0 0;\r\n`;\r\n\r\nconst PostCardImage = styled.div`\r\n  width: auto;\r\n  height: 200px;\r\n  background: ${colors.lightgrey} no-repeat center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst PostCardContent = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PostCardContentLink = css`\r\n  position: relative;\r\n  flex-grow: 1;\r\n  display: block;\r\n  padding: 25px 25px 0;\r\n  color: ${colors.darkgrey};\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst PostCardTags = styled.span`\r\n  display: block;\r\n  margin-bottom: 4px;\r\n  color: ${colors.midgrey};\r\n  font-size: 1.2rem;\r\n  line-height: 1.15em;\r\n  font-weight: 500;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst PostCardTitle = styled.h2`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst PostCardExcerpt = styled.section`\r\n  font-family: Georgia, serif;\r\n`;\r\n\r\nconst PostCardMeta = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  padding: 0 25px 25px;\r\n`;\r\n\r\nconst AuthorList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap-reverse;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst AuthorListItem = styled.li`\r\n  position: relative;\r\n  flex-shrink: 0;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  :nth-of-type(1) {\r\n    z-index: 10;\r\n  }\r\n  :nth-of-type(2) {\r\n    z-index: 9;\r\n  }\r\n  :nth-of-type(3) {\r\n    z-index: 8;\r\n  }\r\n  :nth-of-type(4) {\r\n    z-index: 7;\r\n  }\r\n  :nth-of-type(5) {\r\n    z-index: 6;\r\n  }\r\n  :nth-of-type(6) {\r\n    z-index: 5;\r\n  }\r\n  :nth-of-type(7) {\r\n    z-index: 4;\r\n  }\r\n  :nth-of-type(8) {\r\n    z-index: 3;\r\n  }\r\n  :nth-of-type(9) {\r\n    z-index: 2;\r\n  }\r\n  :nth-of-type(10) {\r\n    z-index: 1;\r\n  }\r\n  :hover .author-name-tooltip {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nconst AuthorNameTooltip = styled.div`\r\n  position: absolute;\r\n  bottom: 105%;\r\n  z-index: 999;\r\n  display: block;\r\n  padding: 2px 8px;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  letter-spacing: 0.2px;\r\n  white-space: nowrap;\r\n  background: ${colors.darkgrey};\r\n  border-radius: 3px;\r\n  box-shadow: rgba(39, 44, 49, 0.08) 0 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\r\n  opacity: 0;\r\n  transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99);\r\n  transform: translateY(6px);\r\n  pointer-events: none;\r\n\r\n  @media (max-width: 650px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StaticAvatar = css`\r\n  display: block;\r\n  overflow: hidden;\r\n  margin: 0 -5px;\r\n  width: 34px;\r\n  height: 34px;\r\n  border: #fff 2px solid;\r\n  border-radius: 100%;\r\n`;\r\n\r\nconst AuthorProfileImage = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  /* background: color(var(--lightgrey) l(+10%)); */\r\n  background: ${lighten('0.1', colors.lightgrey)}\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst ReadingTime = styled.span`\r\n  flex-shrink: 0;\r\n  margin-left: 20px;\r\n  color: ${colors.midgrey};\r\n  font-size: 1.2rem;\r\n  line-height: 33px;\r\n  font-weight: 500;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport interface PostCardProps {\r\n  post: PageContext;\r\n}\r\n\r\nconst PostCard: React.FunctionComponent<PostCardProps> = ({ post }) => {\r\n  return (\r\n    <article\r\n      className={`post-card ${!post.frontmatter.image ? 'no-image' : ''}`}\r\n      css={PostCardStyles}\r\n    >\r\n      {post.frontmatter.image && (\r\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\r\n          <PostCardImage className=\"post-card-image\">\r\n            {post.frontmatter.image &&\r\n              post.frontmatter.image.childImageSharp.fluid && (\r\n                <Img\r\n                  alt={`${post.frontmatter.title} cover image`}\r\n                  style={{ height: '100%' }}\r\n                  fluid={post.frontmatter.image.childImageSharp.fluid}\r\n                />\r\n              )}\r\n          </PostCardImage>\r\n        </Link>\r\n      )}\r\n      <PostCardContent className=\"post-card-content\">\r\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\r\n          <header className=\"post-card-header\">\r\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\r\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\r\n          </header>\r\n          <PostCardExcerpt>\r\n            <p>{post.excerpt}</p>\r\n          </PostCardExcerpt>\r\n        </Link>\r\n        <PostCardMeta className=\"post-card-meta\">\r\n          <AuthorList>\r\n            <AuthorListItem>\r\n              <AuthorNameTooltip className=\"author-name-tooltip\">\r\n                {post.frontmatter.author.id}\r\n              </AuthorNameTooltip>\r\n              <Link css={StaticAvatar} to={`/author/${_.kebabCase(post.frontmatter.author.id)}/`}>\r\n                <AuthorProfileImage\r\n                  src={post.frontmatter.author.avatar.children[0].fixed.src}\r\n                  alt={post.frontmatter.author.id}\r\n                />\r\n              </Link>\r\n            </AuthorListItem>\r\n          </AuthorList>\r\n          <ReadingTime>{post.timeToRead} min read</ReadingTime>\r\n        </PostCardMeta>\r\n      </PostCardContent>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { graphql, Link, StaticQuery } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { css } from '@emotion/core';\r\n\r\nimport config from '../../website-config';\r\n\r\nconst SiteNavLogoStyles = css`\r\n  flex-shrink: 0;\r\n  display: block;\r\n  margin-right: 24px;\r\n  padding: 11px 0;\r\n  color: #fff;\r\n  font-size: 1.7rem;\r\n  line-height: 1em;\r\n  font-weight: bold;\r\n  letter-spacing: -0.5px;\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: auto;\r\n    height: 21px;\r\n  }\r\n`;\r\n\r\ninterface SiteNavLogoProps {\r\n  logo?: {\r\n    childImageSharp: {\r\n      fixed: any;\r\n    };\r\n  };\r\n}\r\n\r\nconst SiteNavLogo = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query HeadingQuery {\r\n        logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\r\n          childImageSharp {\r\n            fixed {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    // tslint:disable-next-line:react-this-binding-issue\r\n    render={(data: SiteNavLogoProps) => (\r\n      <Link className=\"site-nav-logo\" css={SiteNavLogoStyles} to=\"/\">\r\n        {data.logo ? (\r\n          <img src={data.logo.childImageSharp.fixed.src} alt={config.title} />\r\n        ) : (\r\n          config.title\r\n        )}\r\n      </Link>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default SiteNavLogo;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-36e47e74810a0d8c32a77f495c49cf8e.ico\";"],"sourceRoot":""}