{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/components/subsribe/SubscribeLogo.tsx","webpack:///./src/components/subsribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/subsribe/SubscribeForm.tsx","webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/icons/twitter.tsx"],"names":["SiteFooter","css","setLightness","colors","darkgrey","SiteFooterContent","name","styles","SiteFooterNav","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","Footer","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","outer","inner","className","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","config","title","Date","getFullYear","facebook","href","rel","twitter","SubscribeOverlayLogo","styled_base_browser_esm","SubscribeLogo","core_browser_esm","gatsby_browser_entry","query","render","data","logo","src","childImageSharp","fixed","alt","_1115645022","SubscribeOverlay","props","open","midgrey","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","_this","_React$Component","call","this","escFunction","event","key","close","setState","isOpen","subscribeEsc","unsubscribeEsc","state","componentWillUnmount","document","addEventListener","removeEventListener","onClick","subsribe_SubscribeLogo","SubscribeForm","React","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","SiteNav","subscribe","openModal","current","_this$props$isHome","isHome","css_browser_esm","SiteNavLogo","role","SocialLink","showSubscribe","subsribe_SubscribeOverlay","ref","SubscribeFormStyles","SubscribeEmail","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","lighten","lightgrey","darken","SubscribeFormButton","mix","blue","desaturate","FormGroup","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","action","mailchimpAction","method","id","noValidate","type","placeholder","style","position","left","aria-hidden","mailchimpName","tabIndex","Facebook","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","xmlns","viewBox","height","d","Twitter"],"mappings":"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","file":"2-97be98ef9ef9541d8e2c.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport { setLightness } from 'polished';\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n\r\nimport { colors } from '../styles/colors';\r\nimport { outer, inner } from '../styles/shared';\r\nimport config from '../website-config';\r\n\r\nconst SiteFooter = css`\r\n  position: relative;\r\n  padding-top: 20px;\r\n  padding-bottom: 60px;\r\n  color: #fff;\r\n  background: ${setLightness('0.0015', colors.darkgrey)};\r\n`;\r\n\r\nconst SiteFooterContent = css`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 1.3rem;\r\n  a {\r\n    color: rgba(255, 255, 255, 0.7);\r\n  }\r\n  a:hover {\r\n    color: rgba(255, 255, 255, 1);\r\n    text-decoration: none;\r\n  }\r\n  @media (max-width: 650px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst SiteFooterNav = styled.nav`\r\n  display: flex;\r\n\r\n  a {\r\n    position: relative;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  a:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 11px;\r\n    left: -11px;\r\n    display: block;\r\n    width: 2px;\r\n    height: 2px;\r\n    background: #fff;\r\n    border-radius: 100%;\r\n  }\r\n\r\n  a:first-of-type:before {\r\n    display: none;\r\n  }\r\n  @media (max-width: 650px) {\r\n    a:first-child {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Footer: React.FunctionComponent = () => {\r\n  return (\r\n    <footer css={[outer, SiteFooter]}>\r\n      <div css={[inner, SiteFooterContent]}>\r\n        <section className=\"copyright\">\r\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\r\n        </section>\r\n        <SiteFooterNav>\r\n          <Link to=\"/\">Latest Posts</Link>\r\n          {config.facebook && (\r\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Facebook\r\n            </a>\r\n          )}\r\n          {config.twitter && (\r\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Twitter\r\n            </a>\r\n          )}\r\n\r\n          <a href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Ghost\r\n          </a>\r\n\r\n          <a href=\"/rss.xml\">RSS</a>\r\n        </SiteFooterNav>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { graphql, StaticQuery } from 'gatsby';\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nimport config from '../../website-config';\r\n\r\nconst SubscribeOverlayLogo = styled.img`\r\n  position: fixed;\r\n  top: 23px;\r\n  left: 30px;\r\n  height: 30px;\r\n`;\r\n\r\ninterface SiteNavLogoProps {\r\n  logo?: {\r\n    childImageSharp: {\r\n      fixed: any;\r\n    };\r\n  };\r\n}\r\n\r\nconst SubscribeLogo = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SubscribeOverlayLogo {\r\n        logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\r\n          childImageSharp {\r\n            # Specify the image processing specifications right in the query.\r\n            # Makes it trivial to update as your page's design changes.\r\n            fixed {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    // tslint:disable-next-line:react-this-binding-issue\r\n    render={(data: SiteNavLogoProps) =>\r\n      data.logo && (\r\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default SubscribeLogo;\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { colors } from '../../styles/colors';\r\nimport config from '../../website-config';\r\nimport SubscribeForm from './SubscribeForm';\r\nimport SubscribeLogo from './SubscribeLogo';\r\n\r\ninterface SubscribeOverlayProps {\r\n  open?: boolean;\r\n}\r\n\r\nconst SubscribeOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 9000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 25, 40, 0.97);\r\n  opacity: ${(props: SubscribeOverlayProps) => (props.open ? 1 : 0)};\r\n  transition: opacity 200ms ease-in;\r\n  pointer-events: ${(props: SubscribeOverlayProps) => (props.open ? 'auto' : 'none')};\r\n  backdrop-filter: blur(3px);\r\n\r\n  form {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    max-width: 500px;\r\n  }\r\n\r\n  .form-group {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  .subscribe-email {\r\n    display: block;\r\n    padding: 14px 20px;\r\n    width: 100%;\r\n    border: none;\r\n    color: ${colors.midgrey};\r\n    font-size: 2rem;\r\n    line-height: 1em;\r\n    font-weight: normal;\r\n    letter-spacing: 0.5px;\r\n    user-select: text;\r\n    border-radius: 8px;\r\n    transition: border-color 0.15s linear;\r\n\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  button {\r\n    display: inline-block;\r\n    margin: 0 0 0 15px;\r\n    padding: 0 25px;\r\n    height: 52px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-size: 1.7rem;\r\n    line-height: 37px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\r\n    background: linear-gradient(\r\n      color(var(--blue) whiteness(+7%)),\r\n      color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\r\n      color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\r\n      color(var(--blue) lightness(-4%) saturation(-10%))\r\n    );\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\r\n\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n  }\r\n`;\r\n\r\nconst SubscribeOverlayClose = styled.a`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: block;\r\n\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 40px;\r\n    right: 25px;\r\n    display: block;\r\n    width: 30px;\r\n    height: 2px;\r\n    background: #fff;\r\n    opacity: 0.8;\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 40px;\r\n    right: 25px;\r\n    display: block;\r\n    width: 30px;\r\n    height: 2px;\r\n    background: #fff;\r\n    opacity: 0.8;\r\n    transform: rotate(-45deg);\r\n  }\r\n\r\n  :hover {\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst SubscribeOverlayContent = styled.div`\r\n  position: relative;\r\n  z-index: 9999;\r\n  margin: 0 0 5vw 0;\r\n  padding: 4vw;\r\n  color: #fff;\r\n  text-align: center;\r\n`;\r\n\r\nconst SubscribeOverlayTitle = styled.h1`\r\n  display: inline-block;\r\n  margin: 0 0 10px 0;\r\n  font-size: 6rem;\r\n  line-height: 1.15em;\r\n`;\r\n\r\nconst SubscribeOverlayDescription = styled.p`\r\n  margin: 0 auto 50px;\r\n  max-width: 650px;\r\n  font-family: Georgia, serif;\r\n  font-size: 3rem;\r\n  line-height: 1.3em;\r\n  font-weight: 300;\r\n  opacity: 0.8;\r\n`;\r\n\r\ninterface SubscribeState {\r\n  isOpen: boolean;\r\n}\r\n\r\nclass SubscribeModal extends React.Component<any, SubscribeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeEsc();\r\n  }\r\n\r\n  escFunction = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  subscribeEsc() {\r\n    document.addEventListener('keydown', this.escFunction, false);\r\n  }\r\n\r\n  unsubscribeEsc() {\r\n    document.removeEventListener('keydown', this.escFunction, false);\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({ isOpen: true });\r\n    this.subscribeEsc();\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({ isOpen: false });\r\n    this.unsubscribeEsc();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SubscribeOverlay open={this.state.isOpen}>\r\n        <SubscribeOverlayClose onClick={this.close} />\r\n        <SubscribeOverlayContent>\r\n          <SubscribeLogo />\r\n          <SubscribeOverlayTitle>Subscribe to {config.title}</SubscribeOverlayTitle>\r\n          <SubscribeOverlayDescription>\r\n            Stay up to date! Get all the latest &amp; greatest posts delivered straight to your\r\n            inbox\r\n          </SubscribeOverlayDescription>\r\n          <SubscribeForm />\r\n        </SubscribeOverlayContent>\r\n      </SubscribeOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubscribeModal;\r\n","// tslint:disable:no-http-string\r\nimport { Link } from 'gatsby';\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n\r\nimport { SocialLink } from '../../styles/shared';\r\nimport config from '../../website-config';\r\nimport Facebook from '../icons/facebook';\r\nimport Twitter from '../icons/twitter';\r\nimport SubscribeModal from '../subsribe/SubscribeOverlay';\r\nimport SiteNavLogo from './SiteNavLogo';\r\n\r\nconst HomeNavRaise = css`\r\n  @media (min-width: 900px) {\r\n    position: relative;\r\n    top: -70px;\r\n  }\r\n`;\r\n\r\nconst SiteNavStyles = css`\r\n  position: relative;\r\n  z-index: 300;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  overflow-y: hidden;\r\n  height: 40px;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst SiteNavLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  -webkit-overflow-scrolling: touch;\r\n  margin-right: 10px;\r\n  padding-bottom: 80px;\r\n  letter-spacing: 0.4px;\r\n  white-space: nowrap;\r\n\r\n  -ms-overflow-scrolling: touch;\r\n\r\n  @media (max-width: 700px) {\r\n    margin-right: 0;\r\n    padding-left: 4vw;\r\n  }\r\n`;\r\n\r\nconst NavStyles = css`\r\n  display: flex;\r\n  margin: 0 0 0 -12px;\r\n  padding: 0;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: block;\r\n    margin: 0;\r\n    padding: 0;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  li a {\r\n    display: block;\r\n    margin: 0;\r\n    padding: 10px 12px;\r\n    color: #fff;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  li a:hover {\r\n    text-decoration: none;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SiteNavRight = styled.div`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 40px;\r\n\r\n  @media (max-width: 700px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SocialLinks = styled.div`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  a:last-of-type {\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nconst SubscribeButton = styled.a`\r\n  display: block;\r\n  padding: 4px 10px;\r\n  border: #fff 1px solid;\r\n  color: #fff;\r\n  font-size: 1.2rem;\r\n  line-height: 1em;\r\n  border-radius: 10px;\r\n  opacity: 0.8;\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n    opacity: 1;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\ninterface SiteNavProps {\r\n  isHome?: boolean;\r\n}\r\n\r\ninterface SiteNaveState {\r\n  isOpen: boolean;\r\n}\r\n\r\nclass SiteNav extends React.Component<SiteNavProps, SiteNaveState> {\r\n  subscribe = React.createRef<SubscribeModal>();\r\n\r\n  constructor(props: SiteNavProps) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n  }\r\n  openModal = () => {\r\n    if (this.subscribe.current) {\r\n      this.subscribe.current.open();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isHome = false } = this.props;\r\n    return (\r\n      <nav css={[isHome && HomeNavRaise, SiteNavStyles]}>\r\n        <SiteNavLeft>\r\n          {!isHome && <SiteNavLogo />}\r\n          <ul css={NavStyles} role=\"menu\">\r\n            {/* TODO: mark current nav item - add class nav-current */}\r\n            <li role=\"menuitem\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li role=\"menuitem\">\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li role=\"menuitem\">\r\n              <Link to=\"/tags/getting-started/\">Getting Started</Link>\r\n            </li>\r\n          </ul>\r\n        </SiteNavLeft>\r\n        <SiteNavRight>\r\n          <SocialLinks>\r\n            {config.facebook && (\r\n              <a\r\n                css={SocialLink}\r\n                href={config.facebook}\r\n                target=\"_blank\"\r\n                title=\"Facebook\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Facebook />\r\n              </a>\r\n            )}\r\n            {config.twitter && (\r\n              <a\r\n                css={SocialLink}\r\n                href={config.twitter}\r\n                title=\"Twitter\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Twitter />\r\n              </a>\r\n            )}\r\n          </SocialLinks>\r\n          {config.showSubscribe && (\r\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\r\n          )}\r\n          {config.showSubscribe && <SubscribeModal ref={this.subscribe} />}\r\n        </SiteNavRight>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiteNav;\r\n","import { darken, desaturate, lighten, mix } from 'polished';\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n\r\nimport { colors } from '../../styles/colors';\r\nimport config from '../../website-config';\r\n\r\n\r\nconst SubscribeFormStyles = css`\r\n  @media (max-width: 500px) {\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst SubscribeEmail = styled.input`\r\n  display: block;\r\n  padding: 10px;\r\n  width: 100%;\r\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\r\n  border: ${lighten('0.07', colors.lightgrey)};\r\n  color: ${colors.midgrey};\r\n  font-size: 1.8rem;\r\n  line-height: 1em;\r\n  font-weight: normal;\r\n  user-select: text;\r\n  border-radius: 5px;\r\n  transition: border-color 0.15s linear;\r\n\r\n  -webkit-appearance: none;\r\n  :focus {\r\n    outline: 0;\r\n    /* border-color: color(var(--lightgrey) l(-2%)); */\r\n    border-color: ${darken('0.02', colors.lightgrey)};\r\n  }\r\n`;\r\n\r\nconst SubscribeFormButton = styled.button`\r\n  display: inline-block;\r\n  margin: 0 0 0 10px;\r\n  padding: 0 20px;\r\n  height: 41px;\r\n  outline: none;\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  line-height: 37px;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\r\n  /* background: linear-gradient(\r\n    color(var(--blue) whiteness(+7%)),\r\n    color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\r\n    color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\r\n    color(var(--blue) lightness(-4%) saturation(-10%))\r\n  ); */\r\n  background: linear-gradient(\r\n    ${mix('0.1', '#fff', colors.blue)},\r\n    ${desaturate('0.1', darken('0.07', colors.blue))} 60%,\r\n    ${desaturate('0.1', darken('0.07', colors.blue))} 90%,\r\n    ${desaturate('0.1', darken('0.04', colors.blue))}\r\n  );\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\r\n\r\n  -webkit-font-smoothing: subpixel-antialiased;\r\n\r\n  :active,\r\n  :focus {\r\n    /* background: color(var(--blue) lightness(-9%) saturation(-10%)); */\r\n    background: ${desaturate('0.1', darken('0.09', colors.blue))};\r\n  }\r\n  @media (max-width: 500px) {\r\n    margin: 10px 0 0;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  flex-grow: 1;\r\n  @media (max-width: 500px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst SubscribeForm: React.FunctionComponent = () => {\r\n  return (\r\n      <form\r\n      css={SubscribeFormStyles}\r\n        action={config.mailchimpAction}\r\n        method=\"post\"\r\n        id=\"mc-embedded-subscribe-form\"\r\n        name=\"mc-embedded-subscribe-form\"\r\n        target=\"_blank\"\r\n        noValidate\r\n      >\r\n        {/* This is required for the form to work correctly  */}\r\n        <FormGroup className=\"form-group\">\r\n          <SubscribeEmail className=\"subscribe-email\" type=\"email\" name=\"EMAIL\" placeholder=\"youremail@example.com\" />\r\n        </FormGroup>\r\n        <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\r\n          <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\r\n        </div>\r\n        <SubscribeFormButton type=\"submit\">\r\n          <span>Subscribe</span>\r\n        </SubscribeFormButton>\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default SubscribeForm;\r\n","// tslint:disable:no-http-string\r\nimport * as React from 'react';\r\n\r\nconst Facebook: React.FunctionComponent = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\r\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\r\n  </svg>\r\n);\r\nexport default Facebook;\r\n","// tslint:disable:no-http-string\r\nimport * as React from 'react';\r\n\r\nconst Twitter: React.FunctionComponent = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\r\n  </svg>\r\n);\r\nexport default Twitter;\r\n"],"sourceRoot":""}